<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
       This POM should be used to build the distribution package and the site. Make sure you execute both
       'package' and 'site' lifecycles first with the regular pom.xml, then execute both with this POM.
       Actually, you should call 'post-site' here, to get the clean version of the website:

       Building the distribution:

       $ mvn clean package
       $ mvn -f dist-pom.xml clean package

       Building the website:

       $ mvn clean site
       $ mvn -f dist-pom.xml clean post-site

       And this is just a reminder for me, you can ignore it:

       mvn -f dist-pom.xml clean post-site; rm -r ~/software/pheon/webroot/teleal.org/projects/lemma/*; cp -R target/site/* ~/software/pheon/webroot/teleal.org/projects/lemma/
       
    -->

    <!-- ##################################################################################################### -->

    <name>Lemma</name>
    <groupId>org.teleal.lemma</groupId>
    <artifactId>lemma</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <url>http://teleal.org/projects/lemma</url>

    <distributionManagement>
        <site>
            <id>teleal.org</id>
            <url>scpexe://teleal.org/webroot/teleal.org/projects/lemma/</url>
        </site>
    </distributionManagement>

    <!-- ##################################################################################################### -->

    <pluginRepositories>
        <pluginRepository>
            <id>teleal-repo</id>
            <url>http://teleal.org/m2</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- ##################################################################################################### -->

    <properties>
        <manual.testSourceDirectory>core/src/test/java</manual.testSourceDirectory>
    </properties>

    <!-- ##################################################################################################### -->

    <build>

        <pluginManagement>
            <plugins>

                <!-- Manual generation settings -->
                <plugin>
                    <groupId>org.teleal.lemma</groupId>
                    <artifactId>lemma-maven-plugin</artifactId>
                    <version>1.0</version>
                </plugin>

                <!-- We support raw XHTML files in the 'site' lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>2.1</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-xhtml</artifactId>
                            <version>1.1.2</version>
                        </dependency>
                    </dependencies>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Package a "legacy" distribution ZIP file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-5</version>
                <executions>
                    <execution>
                        <id>make-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>src/dist/assembly.xml</descriptor>
                    </descriptors>
                    <workDirectory>target/assembly/work</workDirectory>
                </configuration>
            </plugin>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.teleal.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Finalize the documentation when building the website -->
            <plugin>
                <groupId>org.teleal.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>finalize-manual</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- We want some other stuff on our website... -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>finalize-site</id>
                        <phase>post-site</phase>
                        <configuration>
                            <tasks>
                                <copy todir="${reporting.outputDirectory}">
                                    <fileset dir="core/target/site">
                                        <include name="apidocs/**/*"/>
                                        <include name="xref/**/*"/>
                                        <include name="xref-test/**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${reporting.outputDirectory}/css"/>
                                <delete dir="${reporting.outputDirectory}/images"/>
                                <delete dir="${reporting.outputDirectory}/manual/css"/>
                                <delete file="${reporting.outputDirectory}/project-reports.html"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <!-- ##################################################################################################### -->

    <reporting>

        <!-- Don't do anything, just copy my XHTML and please please please, do not mess with it too much! -->
        <excludeDefaults>true</excludeDefaults>

        <plugins>

            <!-- Build the manual for 'site' lifecycle -->
            <plugin>
                <groupId>org.teleal.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>site-manual</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

        </plugins>

    </reporting>

    <!-- ##################################################################################################### -->

    <!-- These hide the "errors" during Javadoc index creation - yes, it's stupid. -->
    <dependencies>
        <dependency>
            <groupId>org.teleal.lemma</groupId>
            <artifactId>lemma-core</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.11</version>
            <scope>test</scope>
            <classifier>jdk15</classifier>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

</project>
